1. Install PHP
First, ensure you have PHP installed. You can download PHP from the official website.

On Windows:
Download the PHP zip file for Windows.
Extract the files to C:\php.
Add C:\php to your system's PATH environment variable.
Verify installation by opening Command Prompt and typing php -v.
On macOS (using Homebrew):

bash
brew install php
On Linux (Ubuntu):
bash
sudo apt update
sudo apt install php php-cli
2. Install MySQL
Download and install MySQL from the official website. Follow the installation instructions for your operating system.

On Windows:
Download the MySQL Installer.
Run the installer and select the appropriate options for your setup.
Set a root password and remember it for later use.
On macOS (using Homebrew):
bash
brew install mysql
brew services start mysql
On Linux (Ubuntu):
bash
sudo apt update
sudo apt install mysql-server
sudo systemctl start mysql
sudo mysql_secure_installation
3. Install Composer
Composer is a dependency manager for PHP. Download it from the official website.

On Windows:
Download and run the Composer-Setup.exe.
Follow the installation instructions.
On macOS and Linux:
bash
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
Verify the installation by running:

bash
composer -v
4. Install PHPMailer using Composer
Navigate to your project directory and run the following command:

bash
composer require phpmailer/phpmailer
5. Create the .env File
Create a .env file in the root directory of your project and add the following configurations:

env
# Database Configuration
DB_HOST=localhost
DB_PORT=3306
DB_DATABASE=your_database_name
DB_USERNAME=your_username
DB_PASSWORD=your_password

# Email Configuration
MAIL_HOST=smtp.yourmailhost.com
MAIL_PORT=587
MAIL_USERNAME=your_email@example.com
MAIL_PASSWORD=your_email_password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=your_email@example.com
MAIL_FROM_NAME="Your Name"

# Application Settings
APP_ENV=local
APP_DEBUG=true
APP_URL=http://localhost
Example .env File Explained
DB_HOST: Your database host, typically localhost.
DB_PORT: The port for your database, usually 3306.
DB_DATABASE: The name of your MySQL database.
DB_USERNAME: Your MySQL username.
DB_PASSWORD: Your MySQL password.
MAIL_HOST: The SMTP server for sending emails.
MAIL_PORT: The SMTP port, 587 for TLS.
MAIL_USERNAME: Your email address.
MAIL_PASSWORD: Your email password.
MAIL_ENCRYPTION: Encryption method (tls or ssl).
MAIL_FROM_ADDRESS: The email address from which emails will be sent.
MAIL_FROM_NAME: The name that will appear on sent emails.
APP_ENV: The environment the app is running in (local, production, etc.).
APP_DEBUG: Whether debugging is enabled (true or false).
APP_URL: The base URL of your application.
6. Load Environment Variables in Your PHP Project
Use a library like vlucas/phpdotenv to load the environment variables in your PHP application. Install it via Composer:

bash:
composer require vlucas/phpdotenv
Load the environment variables in your PHP application:

php
require_once __DIR__ . '/vendor/autoload.php';

$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

// Access variables
$dbHost = getenv('DB_HOST');
$dbPort = getenv('DB_PORT');
$dbDatabase = getenv('DB_DATABASE');
$dbUsername = getenv('DB_USERNAME');
$dbPassword = getenv('DB_PASSWORD');

// PHPMailer configuration
$mailHost = getenv('MAIL_HOST');
$mailPort = getenv('MAIL_PORT');
$mailUsername = getenv('MAIL_USERNAME');
$mailPassword = getenv('MAIL_PASSWORD');
$mailEncryption = getenv('MAIL_ENCRYPTION');
$mailFromAddress = getenv('MAIL_FROM_ADDRESS');
$mailFromName = getenv('MAIL_FROM_NAME');
With these steps, you should have your environment set up for a PHP MVC project using MySQL and PHPMailer.
